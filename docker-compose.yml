services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -h 127.0.0.1 -p 5432 -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1',
        ]
      interval: 3s
      timeout: 3s
      retries: 30
    restart: always

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    env_file:
      - ${ENV_FILE:-.env}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8080:8080'
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: always

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    env_file:
      - ${ENV_FILE:-.env}
    depends_on:
      - backend
    ports:
      - '3000:3000'
    volumes:
      - ./client:/app
      - /app/node_modules
    restart: always

  adminer:
    image: adminer
    depends_on:
      - db
    ports:
      - '8081:8080'
    restart: unless-stopped

volumes:
  db_data:
